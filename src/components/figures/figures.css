@property --angle {
  syntax: '<angle>';
  inherits: true;
  initial-value: 0deg;
}
  
@property --z {
  syntax: '<integer>';
  inherits: true;
  initial-value: 0;
}

@property --planet-offset-x {
  syntax: '<integer>';
  inherits: true;
  initial-value: 0;
}


@keyframes zshift {
    0% {
      z-index: 0;
    }
    90%{
      z-index: 1;
    }
    100%{
      z-index: 0;
    }
}


  
  @keyframes revolve {
    0% {
      --angle: 0deg;
      transform: scale(1);
      z-index: 0;
    }
    25%{
      transform: scale(.5);
    }
    50%{
      transform: scale(1);
    }
    75%{
      transform: scale(1.5);
    }
    90%{
      z-index: 1;
    }
    100% {
      --angle: 360deg;
      transform: scale(1);
      z-index: 0;

    }
  }

.orbit-container {
  position: absolute;

  transform: rotate(30deg);
  width: 580px;
  height: 200px;
  left: 20px;
  animation: zshift 6s linear infinite;

}

/* .orbit {
  position: absolute;
  width: 580px;
  height: 200px;
  border: rgba(255, 255, 255) solid 1px;
  border-radius: 100%;
  transform: rotate(30deg);
  left: 30px;
  top: 50px;

  mix-blend-mode: color-dodge;

} */


.orbit {
  position: absolute;
  width: 580px;
  height: 200px;
  border: rgba(255, 255, 255) solid 1px;
  border-radius: 100%;
  transform: rotate(30deg);
  left: 10px;
  top: 265px;

  filter: blur(.5px);
  mix-blend-mode: color-dodge;

}
  
.planet {
    position: absolute;
    border-radius: 50%;
    padding: 10px;

    width: 10px;
    height: 10px;

    mix-blend-mode: luminosity;
    background-color: #ffffff;

    --x-amplitude: 290px;
    --y-amplitude: -100px;

    --x-offset: 280px;
    --y-offset: 83px;

    --x: calc(cos(var(--angle)) * var(--x-amplitude) + var(--x-offset));
    --y: calc(sin(var(--angle)) * var(--y-amplitude) + var(--y-offset)) ;
    translate: var(--x) var(--y);
    /* z-index: -4; calc() is for Safari */
    animation: revolve 6s linear infinite;

    transform-style: preserve-3d;

}

/* rays */
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100%{
    transform: rotate(360deg);
  }
}

@keyframes shine-pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

.light-rays {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(500px, #ffffff90, rgba(0, 0, 0, 0.762));

  transition: linear all 1s;

  overflow: hidden;
  --a: rgba(255, 255, 255, 0.866);
  --b: rgba(255, 255, 255, 0.201);
  --c: rgba(255, 255, 255, 0.693);
  --d: rgba(255, 255, 255, 0.056);

  opacity: .5;
  filter: blur(30) drop-shadow(10px 0px 0px rgb(255, 255, 255));
  animation: shine-pulse 1s infinite linear;
}

.light-rays:before,
.light-rays:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -100vmax;
  width: 200vmax;
  height: 200vmax;
  opacity: 0.08;
}

div:before {
  background: conic-gradient(
    var(--a),
    var(--b),
    var(--c),
    var(--d),
    var(--a),
    var(--d),
    var(--a),
    var(--d),
    var(--b),
    var(--c),
    var(--d),
    var(--a),
    var(--b),
    var(--a)
  );
  animation: rotate 10s infinite linear;
}
div:after {
  background: conic-gradient(
    var(--c),
    transparent,
    var(--c),
    var(--a),
    transparent,
    var(--b),
    var(--c),
    transparent,
    var(--c),
    var(--a),
    transparent,
    var(--c)
  );
  animation: rotate 10s infinite reverse linear;
}


/* stars */

.star-container {
  position: absolute;

  
  width: 30px;
  height: 30px;


  perspective: 1000px;
  transform-style: preserve-3d;
  z-index: -1;

  display: flex;
  justify-content: center;
  align-items: center;
}

.stars {
  transform-style: preserve-3d;
  /* transform: rotate3d(1, 1, 0, 010deg); */
  animation: stars-perspective-shift 30s infinite reverse linear;

}

.star {
  position: absolute;
  transform: perspective(90px);
  transform-style: preserve-3d;
  line-height: 100px;
  font-size: 20px;
  text-align: center;  
}

#a {
  transform-style: preserve-3d;
  transform: translate3d(400px, -540px, -400px);
}
#b {
  transform: translate3d(200px, -20px, -500px);
}
#c {
  transform: translate3d(-100px, -200px, 400px);
}
#d {
  transform: translate3d(-100px, -40px, 900px);
}


@keyframes stars-perspective-shift {
  0% {
    transform: rotate3d(0, 0, 0, 0deg);
  }
  100% {
    transform: rotate3d(0, 1, 0, 360deg);
  }
}

.darken-layer {
  width: 200vmax;
  height: 200vmax;
  z-index: 4;

  position: absolute;
  top: 50%;
  left: 50%;
  margin: -100vmax;
  width: 200vmax;
  height: 200vmax;
  opacity: 1;
}